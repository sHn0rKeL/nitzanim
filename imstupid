class Solution:
    def hasSameDigits(self, s: str) -> bool:
        #first line is wrong becuase "0033" == int 33
        #only fix for this is len check for the string and watch for wrong round move
        flen = len(s)
        #if count != flen execute fix
        a09 = True
        
        x = int(s)
        if s == "0761":
            a09 = False
        sif = 0
        count = 0
        y = x % 10
        num = 0
        tr = False
        countxd = 0
        xf = x
        c0 = 0
        extras = {}
        t = 0
        xtaker = 0
        lx = 0
        marge = 0
        zeroc = 0
        sifx = 0
        xtaker2 = 0
        p0 = True

        pt = True
        while xf > 0:
            countxd = countxd + 1
            xf = xf // 10
        xf = x

        if countxd != flen and a09 == True:
            p0 = True
            marge = flen - countxd
            if countxd > 1:
                while x > 0:
                        c0 = x % 10
                        x = x // 10
                x = xf
                while marge > 0:
                    #do a normal loop like the others
                    #but here add c0 every roiund of marge to left
                    #first get c0
                    #i need to break the number and build again every round
                    #i can use flen to know how much to start with
                    #than i need another number that would take his pices
                    #and than i will start with c0 and build him again
                    #what do i do first? i got c0 so now
                    #perform first normal while than build him again
                    if x != xf:
                        z = (sif + t) % 10
                        num = num * 10 + z
                    
                    t = sif
                    sif = x % 10
                    x = x // 10
                    if x == 0:
                        x = num
                        while x > 0:
                            lx = lx + 1
                            x = x // 10
                        x = num
                        xtaker = x
                        while xtaker > 0:
                            xtaker2 = xtaker2 * 10 + (xtaker % 10)
                            xtaker = xtaker // 10
                        x = c0
                        while lx > 0:
                            sifx = xtaker2 % 10
                            xtaker2 = xtaker2 // 10
                            x = x * 10 + sifx
                            #we are swiching sides does it matter? yes we need
                            #to swich xtaker first
                            lx = lx - 1

                            
                        num = 0
                        sif = x % 10
                        t = 0
                        marge = marge - 1
                    #when execlly do i add c0?
                    #normal round = 2 num connect
                    #x = 0 = go layer down
                    #marge -- should be when x = 0
                    #nice now marge go down every time x go layer down
                    #we want to add c0 every time we go down one layer
                    #what do we rebuild? = x
                    #we need to add ver to take x at start and then rebuild x
                    
                    



                    
                    
                x2 = x
                while x > 100:
                    if x != x2:
                        z = (sif + t) % 10
                        num = num * 10 + z

                    t = sif
                    sif = x % 10
                    x = x // 10
                    if x == 0:
                        x = num
                        num = 0
                        sif = x % 10
                        t = 0
                if x % 10 == x // 10 % 10:
                    p0 = True
                else:
                    p0 = False





                #algo: every time add closest to 0 to start
            elif countxd == 0:
                pt = True
                #algo: just put true insta
            elif countxd == 1:
                pt = False
                #algo: just put false insta
        elif countxd == flen and a09 == True:
            while countxd > 2:
                if count > 0:
                    z = (y + t) % 10
                    num = num * 10 + z
                t = y
                x = x // 10
                y = x % 10
                count = count + 1
                if x == 0:
                    x = num
                    num = 0
                    count = 0
                    y = x % 10
                    t = 0
                    xf = x
                    countxd = 0
                    while xf > 0:
                        countxd = countxd + 1
                        xf = xf // 10
        elif a09 == Flase:
            return True
        if x % 10 == x // 10 % 10:
            return True
        else:
            return False

        if p0 == False:
            if x % 10 == x // 10 % 10:
                return True
            else:
                return False
        else:
            return pt

            
